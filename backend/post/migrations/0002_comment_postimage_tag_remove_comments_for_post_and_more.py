# Generated by Django 4.2.11 on 2024-03-31 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('post', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('comment', models.TextField()),
                ('comment_time', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('downvote', models.ManyToManyField(related_name='downvoted_comments', to=settings.AUTH_USER_MODEL)),
                ('upvote', models.ManyToManyField(related_name='upvoted_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to='files/images/')),
                ('added_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.RemoveField(
            model_name='comments',
            name='for_post',
        ),
        migrations.DeleteModel(
            name='PostImages',
        ),
        migrations.RemoveField(
            model_name='post',
            name='owener',
        ),
        migrations.RemoveField(
            model_name='report',
            name='reported_post',
        ),
        migrations.AddField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(related_name='liked_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='owner_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='post',
            name='owner_object_id',
            field=models.PositiveIntegerField(null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='reported_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='report',
            name='reported_object_id',
            field=models.PositiveIntegerField(null=True),
        ),
        migrations.RemoveField(
            model_name='post',
            name='downvote',
        ),
        migrations.RemoveField(
            model_name='post',
            name='upvote',
        ),
        migrations.AlterField(
            model_name='post',
            name='video',
            field=models.FileField(blank=True, upload_to='posts/videos/'),
        ),
        migrations.AddField(
            model_name='postimage',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='post.post'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(related_name='posts', to='post.tag'),
        ),
        migrations.AlterField(
            model_name='commentimage',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.comment'),
        ),
        migrations.AddField(
            model_name='post',
            name='downvote',
            field=models.ManyToManyField(related_name='downvoted_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='upvote',
            field=models.ManyToManyField(related_name='upvoted_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='Comments',
        ),
    ]
